Description: CVE-2013-4185: Use cached nwinfo for secgroup rules
 This stops a potential DOS with source security groups by using the db cached
 version of the network info instead of calling out to the network api multiple
 times.
Author: Vish Ishaya <vishvananda@gmail.com>
Bug-Debian: http://bugs.debian.org/718907
Bug-Ubuntu: https://bugs.launchpad.com/+bug/1184041
Origin: upstream, https://review.openstack.org/#/c/39543/
Change-Id: Id5f24ecf0e8cce60c27a9aecbc6e606c4c44d6b6
Last-Update: 2013-08-07

--- nova-2013.1.2.orig/nova/tests/test_libvirt.py
+++ nova-2013.1.2/nova/tests/test_libvirt.py
@@ -3970,7 +3970,9 @@ class IptablesFirewallTestCase(test.Test
         from nova.network import linux_net
         linux_net.iptables_manager.execute = fake_iptables_execute
 
-        _fake_stub_out_get_nw_info(self.stubs, lambda *a, **kw: network_model)
+        from nova.compute import utils as compute_utils
+        self.stubs.Set(compute_utils, 'get_nw_info_for_instance',
+                       lambda instance: network_model)
 
         network_info = network_model.legacy()
         self.fw.prepare_instance_filter(instance_ref, network_info)
--- nova-2013.1.2.orig/nova/tests/test_xenapi.py
+++ nova-2013.1.2/nova/tests/test_xenapi.py
@@ -2074,8 +2074,9 @@ class XenAPIDom0IptablesFirewallTestCase
         network_model = fake_network.fake_get_instance_nw_info(self.stubs,
                                                       1, spectacular=True)
 
-        fake_network.stub_out_nw_api_get_instance_nw_info(self.stubs,
-                                      lambda *a, **kw: network_model)
+        from nova.compute import utils as compute_utils
+        self.stubs.Set(compute_utils, 'get_nw_info_for_instance',
+                       lambda instance: network_model)
 
         network_info = network_model.legacy()
         self.fw.prepare_instance_filter(instance_ref, network_info)
--- nova-2013.1.2.orig/nova/virt/firewall.py
+++ nova-2013.1.2/nova/virt/firewall.py
@@ -19,9 +19,8 @@
 
 from oslo.config import cfg
 
-from nova import conductor
+from nova.compute import utils as compute_utils
 from nova import context
-from nova import network
 from nova.network import linux_net
 from nova.openstack.common import importutils
 from nova.openstack.common import lockutils
@@ -409,18 +408,9 @@ class IptablesFirewallDriver(FirewallDri
                     fw_rules += [' '.join(args)]
                 else:
                     if rule['grantee_group']:
-                        # FIXME(jkoelker) This needs to be ported up into
-                        #                 the compute manager which already
-                        #                 has access to a nw_api handle,
-                        #                 and should be the only one making
-                        #                 making rpc calls.
-                        nw_api = network.API()
-                        capi = conductor.API()
                         for instance in rule['grantee_group']['instances']:
-                            nw_info = nw_api.get_instance_nw_info(
-                                ctxt,
-                                instance,
-                                conductor_api=capi)
+                            nw_info = compute_utils.get_nw_info_for_instance(
+                                    instance)
 
                             ips = [ip['address']
                                 for ip in nw_info.fixed_ips()
--- nova-2013.1.2.orig/nova/db/sqlalchemy/api.py
+++ nova-2013.1.2/nova/db/sqlalchemy/api.py
@@ -3231,6 +3231,8 @@ def security_group_rule_get_by_security_
             filter_by(parent_group_id=security_group_id).\
             options(joinedload_all('grantee_group.instances.'
                                    'system_metadata')).\
+            options(joinedload('grantee_group.instances.'
+                               'info_cache')).\
             all()
 
 
