Description: Make nova-api use servicegroup.API.service_is_up()
Author: Akira Yoshiyama <a-yoshiyama@bu.jp.nec.com>
Origin: upstream, https://review.openstack.org/#/c/32410/
Bug-Ubuntu: https://launchpad.net/bugs/1168861
Date: Sun, 14 Apr 2013 11:39:55 +0000
Last-Update: 2013-06-20

diff --git a/nova/api/openstack/compute/contrib/services.py b/nova/api/openstack/compute/contrib/services.py
index 5b382f8..b3161f4 100644
--- a/nova/api/openstack/compute/contrib/services.py
+++ b/nova/api/openstack/compute/contrib/services.py
@@ -24,8 +24,7 @@ from nova import compute
 from nova import db
 from nova import exception
 from nova.openstack.common import log as logging
-from nova.openstack.common import timeutils
-from nova import utils
+from nova import servicegroup
 
 LOG = logging.getLogger(__name__)
 authorize = extensions.extension_authorizer('compute', 'services')
@@ -74,6 +73,7 @@ class ServiceController(object):
 
     def __init__(self):
         self.host_api = compute.HostAPI()
+        self.servicegroup_api = servicegroup.API()
 
     @wsgi.serializers(xml=ServicesIndexTemplate)
     def index(self, req):
@@ -82,7 +82,6 @@ class ServiceController(object):
         """
         context = req.environ['nova.context']
         authorize(context)
-        now = timeutils.utcnow()
         services = self.host_api.service_get_all(
             context, set_zones=True)
 
@@ -99,8 +98,7 @@ class ServiceController(object):
 
         svcs = []
         for svc in services:
-            delta = now - (svc['updated_at'] or svc['created_at'])
-            alive = abs(utils.total_seconds(delta)) <= CONF.service_down_time
+            alive = self.servicegroup_api.service_is_up(svc)
             art = (alive and "up") or "down"
             active = 'enabled'
             if svc['disabled']:
diff --git a/nova/tests/api/openstack/compute/contrib/test_services.py b/nova/tests/api/openstack/compute/contrib/test_services.py
index 57dd056..387a5eb 100644
--- a/nova/tests/api/openstack/compute/contrib/test_services.py
+++ b/nova/tests/api/openstack/compute/contrib/test_services.py
@@ -21,6 +21,7 @@ from nova import context
 from nova import db
 from nova import exception
 from nova.openstack.common import timeutils
+from nova.servicegroup.drivers import db as db_driver
 from nova import test
 from nova.tests.api.openstack import fakes
 
@@ -202,3 +203,13 @@ class ServicesTest(test.TestCase):
         res_dict = self.controller.update(req, "disable", body)
 
         self.assertEqual(res_dict['service']['status'], 'disabled')
+
+    # This test is just to verify that the servicegroup API gets used when
+    # calling this API.
+    def test_services_with_exception(self):
+        def dummy_is_up(self, dummy):
+            raise KeyError()
+
+        self.stubs.Set(db_driver.DbDriver, 'is_up', dummy_is_up)
+        req = FakeRequestWithHostService()
+        self.assertRaises(KeyError, self.controller.index, req)
